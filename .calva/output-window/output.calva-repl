; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.9.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.27.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉user꞉> 
; Syntax error compiling at (ex01_fundamentally_functional.clj:351:3).
; Unable to resolve symbol: = in this context
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
; Syntax error compiling at (ex01_fundamentally_functional.clj:352:7).
; Unable to resolve symbol: scale-by in this context
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
; Syntax error compiling at (ex01_fundamentally_functional.clj:1:7648).
; Unable to resolve symbol: PI in this context
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
; Syntax error compiling at (ex01_fundamentally_functional.clj:1:7648).
; Unable to resolve symbol: PI in this context
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
; Syntax error compiling at (ex01_fundamentally_functional.clj:335:1).
; Unable to resolve symbol: scale-by-PI in this context
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
; Syntax error compiling at (ex01_fundamentally_functional.clj:331:1).
; Unable to resolve symbol: defn in this context
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
; Evaluating file: ex01_fundamentally_functional.clj
; Syntax error (ClassNotFoundException) compiling at (ex01_fundamentally_functional.clj:81:1).
; clojure-by-example.ex00-introduction
; Evaluation of file ex01_fundamentally_functional.clj failed: class clojure.lang.Compiler$CompilerException

clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
; Syntax error compiling at (ex01_fundamentally_functional.clj:333:3).
; Unable to resolve symbol: PI in this context
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
#'clojure-by-example.ex01-fundamentally-functional/PI
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
#'clojure-by-example.ex01-fundamentally-functional/scale-by-PI
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
31.41592653589793
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
; Syntax error compiling at (ex01_fundamentally_functional.clj:352:7).
; Unable to resolve symbol: scale-by in this context
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
; Syntax error compiling at (ex01_fundamentally_functional.clj:1:7648).
; Unable to resolve symbol: scale-by in this context
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
; Evaluating file: ex01_fundamentally_functional.clj
; Syntax error (ClassNotFoundException) compiling at (ex01_fundamentally_functional.clj:81:1).
; clojure-by-example.ex00-introduction
; Evaluation of file ex01_fundamentally_functional.clj failed: class clojure.lang.Compiler$CompilerException

clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
; Syntax error compiling at (ex01_fundamentally_functional.clj:1:7648).
; Unable to resolve symbol: scale-by in this context
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
#'clojure-by-example.ex01-fundamentally-functional/scale-by
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
#function[clojure-by-example.ex01-fundamentally-functional/scale-by]
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
true
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
3.141592653589793
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
#function[clojure-by-example.ex01-fundamentally-functional/scale-by/fn--7793]
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
#'clojure-by-example.ex01-fundamentally-functional/quadruple
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
20
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
3.141592653589793
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
#'clojure-by-example.ex01-fundamentally-functional/scale-by-PI-v2
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
3.141592653589793
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
#'clojure-by-example.ex01-fundamentally-functional/halve
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
5.0
clj꞉clojure-by-example.ex01-fundamentally-functional꞉> 
; Evaluating file: 4-clojure-exercises.clj
nil
clj꞉clojure-by-example.4-clojure-exercises꞉> 
; Execution error (ClassCastException) at clojure-by-example.4-clojure-exercises/eval7821 (form-init17360122970027888380.clj:11).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉clojure-by-example.4-clojure-exercises꞉> 
1
clj꞉clojure-by-example.4-clojure-exercises꞉> 
nil
clj꞉clojure-by-example.4-clojure-exercises꞉> 
1
clj꞉clojure-by-example.4-clojure-exercises꞉> 
nil
clj꞉clojure-by-example.4-clojure-exercises꞉> 
2
clj꞉clojure-by-example.4-clojure-exercises꞉> 
#'clojure-by-example.4-clojure-exercises/second-last
clj꞉clojure-by-example.4-clojure-exercises꞉> 
3
clj꞉clojure-by-example.4-clojure-exercises꞉> 
2
clj꞉clojure-by-example.4-clojure-exercises꞉> 
#'clojure-by-example.4-clojure-exercises/second-last-v2
clj꞉clojure-by-example.4-clojure-exercises꞉> 
2
clj꞉clojure-by-example.4-clojure-exercises꞉> 
nil
clj꞉clojure-by-example.4-clojure-exercises꞉> 
3
clj꞉clojure-by-example.4-clojure-exercises꞉> 
nil
clj꞉clojure-by-example.4-clojure-exercises꞉> 
nil
clj꞉clojure-by-example.4-clojure-exercises꞉> 
nil
clj꞉clojure-by-example.4-clojure-exercises꞉> 
2
clj꞉clojure-by-example.4-clojure-exercises꞉> 
#'clojure-by-example.4-clojure-exercises/my-last
clj꞉clojure-by-example.4-clojure-exercises꞉> 
2
clj꞉clojure-by-example.4-clojure-exercises꞉> 
2
clj꞉clojure-by-example.4-clojure-exercises꞉> 
true
clj꞉clojure-by-example.4-clojure-exercises꞉> 
4
clj꞉clojure-by-example.4-clojure-exercises꞉> 
nil
clj꞉clojure-by-example.4-clojure-exercises꞉> 
"fal"
clj꞉clojure-by-example.4-clojure-exercises꞉> 
#'clojure-by-example.4-clojure-exercises/my-some
clj꞉clojure-by-example.4-clojure-exercises꞉> 
nil
clj꞉clojure-by-example.4-clojure-exercises꞉> 
2
clj꞉clojure-by-example.4-clojure-exercises꞉> 
8
clj꞉clojure-by-example.4-clojure-exercises꞉> 
true
clj꞉clojure-by-example.4-clojure-exercises꞉> 
false
clj꞉clojure-by-example.4-clojure-exercises꞉> 
6
clj꞉clojure-by-example.4-clojure-exercises꞉> 
nil
clj꞉clojure-by-example.4-clojure-exercises꞉> 
7
clj꞉clojure-by-example.4-clojure-exercises꞉> 
true
clj꞉clojure-by-example.4-clojure-exercises꞉> 
; Evaluating file: ex02_domain_as_data.clj
nil
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
"Earth"
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
"Earth"
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
{"nitrogen" 78.08,
 "oxygen" 20.95,
 "carbon-dioxide" 0.4,
 "water-vapour" 0.1,
 "argon" 0.33,
 "traces" 0.14}
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
0.14
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
"Earth"
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
0.14
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
0.14
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
nil
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
0.14
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
0.14
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
#'clojure-by-example.ex02-domain-as-data/less-mass-than-earth?
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
({:pname "Mercury",
  :moons 0,
  :mass 0.0533}
 {:pname "Venus",
  :moons 0,
  :mass 0.815}
 {:pname "Mars", :moons 2, :mass 0.107})
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
"a"
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
"a"
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
"a"
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
nil
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
#'clojure-by-example.ex02-domain-as-data/poison-gas?
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
:chlorine
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
nil
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
(false
 false
 true
 true
 true
 true
 true
 true
 true
 true
 true
 true)
clj꞉clojure-by-example.ex02-domain-as-data꞉> 
